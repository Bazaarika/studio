
import { db } from './config';
import { collection, addDoc, getDocs, DocumentData } from 'firebase/firestore';
import type { Product } from '@/lib/mock-data';

// The type for a new product, excluding the ID which is generated by Firestore
type NewProduct = Omit<Product, 'id'>;


// Add a new product to the "products" collection
export const addProduct = async (productData: NewProduct) => {
  try {
    const docRef = await addDoc(collection(db, "products"), productData);
    return docRef.id;
  } catch (e) {
    console.error("Error adding document: ", e);
    throw new Error("Failed to add product");
  }
};

// Get all products from the "products" collection
export const getProducts = async (): Promise<Product[]> => {
    const querySnapshot = await getDocs(collection(db, "products"));
    const products: Product[] = [];
    querySnapshot.forEach((doc: DocumentData) => {
        products.push({ id: doc.id, ...doc.data() } as Product);
    });
    return products;
}

// Simple test function to add data to a "tests" collection
export const addTestData = async () => {
    try {
        const docRef = await addDoc(collection(db, "tests"), {
            name: "raj kumar",
            timestamp: new Date()
        });
        console.log("Test document written with ID: ", docRef.id);
        return docRef.id;
    } catch (e) {
        console.error("Error adding test document: ", e);
        throw new Error("Failed to add test data");
    }
};
