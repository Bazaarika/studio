// This file is generated by Gemini.
'use server';

/**
 * @fileOverview Provides AI-powered styling suggestions based on an uploaded image of an outfit.
 *
 * - getStyleSuggestions - A function that accepts an outfit image and returns styling suggestions.
 * - StyleSuggestionsInput - The input type for the getStyleSuggestions function.
 * - StyleSuggestionsOutput - The return type for the getStyleSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { googleAI } from '@genkit-ai/googleai';

const StyleSuggestionsInputSchema = z.object({
  imageUrl: z
    .string()
    .describe(
      "A photo of an outfit, as a public URL or a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type StyleSuggestionsInput = z.infer<typeof StyleSuggestionsInputSchema>;

const StyleSuggestionsOutputSchema = z.object({
  suggestions: z.array(z.string()).describe('An array of styling suggestions.'),
});
export type StyleSuggestionsOutput = z.infer<typeof StyleSuggestionsOutputSchema>;

export async function getStyleSuggestions(input: StyleSuggestionsInput): Promise<StyleSuggestionsOutput> {
  return styleSuggestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'styleSuggestionsPrompt',
  model: 'googleai/gemini-1.5-flash-latest',
  input: {schema: StyleSuggestionsInputSchema},
  output: {schema: StyleSuggestionsOutputSchema},
  prompt: `You are a personal stylist providing fashion advice.

  Based on the following outfit, provide a few styling suggestions to enhance the look.

  Outfit: {{media url=imageUrl}}

  Suggestions:`,
});

const styleSuggestionsFlow = ai.defineFlow(
  {
    name: 'styleSuggestionsFlow',
    inputSchema: StyleSuggestionsInputSchema,
    outputSchema: StyleSuggestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
