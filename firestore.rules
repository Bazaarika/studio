
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Products can be read by anyone, but only admins (not implemented yet) should write.
    // For now, we disallow all client-side writes to protect data.
    match /products/{productId} {
      allow read: if true;
      allow write: if false; // Protects against unauthorized modification
    }

    // Categories are public, but should not be changed from the client
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if false;
    }
    
    // Home layout is public, but should not be changed from the client
    match /home_layout/{sectionId} {
      allow read: if true;
      allow write: if false;
    }

    // Pages are public, but should not be changed from the client
    match /pages/{pageId} {
        allow read: if true;
        allow write: if false;
    }

    // Users can only read and write their own documents.
    match /users/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }

    // Orders can only be created, read, and updated by the user who owns them.
    match /orders/{orderId} {
      allow read, update: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
  }
}
