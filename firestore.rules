rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Products can be read by anyone, but only admins (in the future) should write.
    // For now, we'll make it read-only for clients.
    match /products/{productId} {
      allow read: if true;
      allow write: if false; // Protect your product data from client-side writes
    }
    
    // Categories can be read by anyone, but only admins should write.
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if false;
    }
    
    // Home layout can be read by anyone, but only admins should write.
    match /home_layout/{sectionId} {
      allow read: if true;
      allow write: if false;
    }

    // Pages can be read by anyone, but only admins should write.
    match /pages/{pageId} {
      allow read: if true;
      allow write: if false;
    }

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }
    
    // Orders can only be created by signed-in users for themselves.
    // They can only be read by their owner.
    match /orders/{orderId} {
      allow read: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update: if false; // Orders should not be updatable from the client
    }
  }
}
